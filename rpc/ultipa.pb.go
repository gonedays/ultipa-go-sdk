// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: ultipa.proto

package ultipa

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UltipaPropertyType int32

const (
	UltipaPropertyType_PROPERTY_INT32  UltipaPropertyType = 0
	UltipaPropertyType_PROPERTY_STRING UltipaPropertyType = 1
	UltipaPropertyType_PROPERTY_FLOAT  UltipaPropertyType = 2
	UltipaPropertyType_PROPERTY_DOUBLE UltipaPropertyType = 3
	UltipaPropertyType_PROPERTY_UINT32 UltipaPropertyType = 4
	UltipaPropertyType_PROPERTY_INT64  UltipaPropertyType = 5
	UltipaPropertyType_PROPERTY_UINT64 UltipaPropertyType = 6
	UltipaPropertyType_PROPERTY_BLOB   UltipaPropertyType = 7
)

// Enum value maps for UltipaPropertyType.
var (
	UltipaPropertyType_name = map[int32]string{
		0: "PROPERTY_INT32",
		1: "PROPERTY_STRING",
		2: "PROPERTY_FLOAT",
		3: "PROPERTY_DOUBLE",
		4: "PROPERTY_UINT32",
		5: "PROPERTY_INT64",
		6: "PROPERTY_UINT64",
		7: "PROPERTY_BLOB",
	}
	UltipaPropertyType_value = map[string]int32{
		"PROPERTY_INT32":  0,
		"PROPERTY_STRING": 1,
		"PROPERTY_FLOAT":  2,
		"PROPERTY_DOUBLE": 3,
		"PROPERTY_UINT32": 4,
		"PROPERTY_INT64":  5,
		"PROPERTY_UINT64": 6,
		"PROPERTY_BLOB":   7,
	}
)

func (x UltipaPropertyType) Enum() *UltipaPropertyType {
	p := new(UltipaPropertyType)
	*p = x
	return p
}

func (x UltipaPropertyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UltipaPropertyType) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[0].Descriptor()
}

func (UltipaPropertyType) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[0]
}

func (x UltipaPropertyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UltipaPropertyType.Descriptor instead.
func (UltipaPropertyType) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{0}
}

type ErrorCode int32

const (
	ErrorCode_SUCCESS                        ErrorCode = 0
	ErrorCode_FAILED                         ErrorCode = 1
	ErrorCode_PARAM_ERROR                    ErrorCode = 2
	ErrorCode_BASE_DB_ERROR                  ErrorCode = 3
	ErrorCode_ENGINE_ERROR                   ErrorCode = 4
	ErrorCode_SYSTEM_ERROR                   ErrorCode = 5
	ErrorCode_RAFT_REDIRECT                  ErrorCode = 6
	ErrorCode_RAFT_LEADER_NOT_YET_ELECTED    ErrorCode = 7
	ErrorCode_RAFT_LOG_ERROR                 ErrorCode = 8
	ErrorCode_UQL_ERROR                      ErrorCode = 9
	ErrorCode_NOT_RAFT_MODE                  ErrorCode = 10
	ErrorCode_RAFT_NO_AVAILABLE_FOLLOWERS    ErrorCode = 11
	ErrorCode_RAFT_NO_AVAILABLE_ALGO_SERVERS ErrorCode = 12
	//鉴权失败
	ErrorCode_PERMISSION_DENIED ErrorCode = 13
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "SUCCESS",
		1:  "FAILED",
		2:  "PARAM_ERROR",
		3:  "BASE_DB_ERROR",
		4:  "ENGINE_ERROR",
		5:  "SYSTEM_ERROR",
		6:  "RAFT_REDIRECT",
		7:  "RAFT_LEADER_NOT_YET_ELECTED",
		8:  "RAFT_LOG_ERROR",
		9:  "UQL_ERROR",
		10: "NOT_RAFT_MODE",
		11: "RAFT_NO_AVAILABLE_FOLLOWERS",
		12: "RAFT_NO_AVAILABLE_ALGO_SERVERS",
		13: "PERMISSION_DENIED",
	}
	ErrorCode_value = map[string]int32{
		"SUCCESS":                        0,
		"FAILED":                         1,
		"PARAM_ERROR":                    2,
		"BASE_DB_ERROR":                  3,
		"ENGINE_ERROR":                   4,
		"SYSTEM_ERROR":                   5,
		"RAFT_REDIRECT":                  6,
		"RAFT_LEADER_NOT_YET_ELECTED":    7,
		"RAFT_LOG_ERROR":                 8,
		"UQL_ERROR":                      9,
		"NOT_RAFT_MODE":                  10,
		"RAFT_NO_AVAILABLE_FOLLOWERS":    11,
		"RAFT_NO_AVAILABLE_ALGO_SERVERS": 12,
		"PERMISSION_DENIED":              13,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{1}
}

type FollowerRole int32

const (
	FollowerRole_ROLE_UNSET           FollowerRole = 0
	FollowerRole_ROLE_READABLE        FollowerRole = 1
	FollowerRole_ROLE_ALGO_EXECUTABLE FollowerRole = 2
)

// Enum value maps for FollowerRole.
var (
	FollowerRole_name = map[int32]string{
		0: "ROLE_UNSET",
		1: "ROLE_READABLE",
		2: "ROLE_ALGO_EXECUTABLE",
	}
	FollowerRole_value = map[string]int32{
		"ROLE_UNSET":           0,
		"ROLE_READABLE":        1,
		"ROLE_ALGO_EXECUTABLE": 2,
	}
)

func (x FollowerRole) Enum() *FollowerRole {
	p := new(FollowerRole)
	*p = x
	return p
}

func (x FollowerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FollowerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[2].Descriptor()
}

func (FollowerRole) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[2]
}

func (x FollowerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FollowerRole.Descriptor instead.
func (FollowerRole) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{2}
}

type ServerStatus int32

const (
	ServerStatus_DEAD  ServerStatus = 0
	ServerStatus_ALIVE ServerStatus = 1
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "DEAD",
		1: "ALIVE",
	}
	ServerStatus_value = map[string]int32{
		"DEAD":  0,
		"ALIVE": 1,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[3].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[3]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{3}
}

type DBType int32

const (
	DBType_DBNODE DBType = 0
	DBType_DBEDGE DBType = 1
)

// Enum value maps for DBType.
var (
	DBType_name = map[int32]string{
		0: "DBNODE",
		1: "DBEDGE",
	}
	DBType_value = map[string]int32{
		"DBNODE": 0,
		"DBEDGE": 1,
	}
)

func (x DBType) Enum() *DBType {
	p := new(DBType)
	*p = x
	return p
}

func (x DBType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBType) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[4].Descriptor()
}

func (DBType) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[4]
}

func (x DBType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBType.Descriptor instead.
func (DBType) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{4}
}

type TASK_STATUS int32

const (
	TASK_STATUS_TASK_PENDING   TASK_STATUS = 0
	TASK_STATUS_TASK_COMPUTING TASK_STATUS = 1
	TASK_STATUS_TASK_WRITING   TASK_STATUS = 2
	TASK_STATUS_TASK_DONE      TASK_STATUS = 3
	TASK_STATUS_TASK_FAILED    TASK_STATUS = 4
	TASK_STATUS_TASK_STOPPED   TASK_STATUS = 5
)

// Enum value maps for TASK_STATUS.
var (
	TASK_STATUS_name = map[int32]string{
		0: "TASK_PENDING",
		1: "TASK_COMPUTING",
		2: "TASK_WRITING",
		3: "TASK_DONE",
		4: "TASK_FAILED",
		5: "TASK_STOPPED",
	}
	TASK_STATUS_value = map[string]int32{
		"TASK_PENDING":   0,
		"TASK_COMPUTING": 1,
		"TASK_WRITING":   2,
		"TASK_DONE":      3,
		"TASK_FAILED":    4,
		"TASK_STOPPED":   5,
	}
)

func (x TASK_STATUS) Enum() *TASK_STATUS {
	p := new(TASK_STATUS)
	*p = x
	return p
}

func (x TASK_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASK_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[5].Descriptor()
}

func (TASK_STATUS) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[5]
}

func (x TASK_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASK_STATUS.Descriptor instead.
func (TASK_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{5}
}

type UserSettingRequest_OPTION int32

const (
	UserSettingRequest_OPT_GET UserSettingRequest_OPTION = 0
	UserSettingRequest_OPT_SET UserSettingRequest_OPTION = 1
)

// Enum value maps for UserSettingRequest_OPTION.
var (
	UserSettingRequest_OPTION_name = map[int32]string{
		0: "OPT_GET",
		1: "OPT_SET",
	}
	UserSettingRequest_OPTION_value = map[string]int32{
		"OPT_GET": 0,
		"OPT_SET": 1,
	}
)

func (x UserSettingRequest_OPTION) Enum() *UserSettingRequest_OPTION {
	p := new(UserSettingRequest_OPTION)
	*p = x
	return p
}

func (x UserSettingRequest_OPTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettingRequest_OPTION) Descriptor() protoreflect.EnumDescriptor {
	return file_ultipa_proto_enumTypes[6].Descriptor()
}

func (UserSettingRequest_OPTION) Type() protoreflect.EnumType {
	return &file_ultipa_proto_enumTypes[6]
}

func (x UserSettingRequest_OPTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettingRequest_OPTION.Descriptor instead.
func (UserSettingRequest_OPTION) EnumDescriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{7, 0}
}

//------------------------1.SayHello------------------------------
type HelloUltipaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloUltipaRequest) Reset() {
	*x = HelloUltipaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloUltipaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloUltipaRequest) ProtoMessage() {}

func (x *HelloUltipaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloUltipaRequest.ProtoReflect.Descriptor instead.
func (*HelloUltipaRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{0}
}

func (x *HelloUltipaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloUltipaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloUltipaReply) Reset() {
	*x = HelloUltipaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloUltipaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloUltipaReply) ProtoMessage() {}

func (x *HelloUltipaReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloUltipaReply.ProtoReflect.Descriptor instead.
func (*HelloUltipaReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{1}
}

func (x *HelloUltipaReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *HelloUltipaReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//
//uql : ab.src(1).dest(2).depth(1).limit(10).select(*)
//db_name : default
//timeout  1s 单位:秒
type UqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uql       string `protobuf:"bytes,1,opt,name=uql,proto3" json:"uql,omitempty"`
	Timeout   uint32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	GraphName string `protobuf:"bytes,3,opt,name=graph_name,json=graphName,proto3" json:"graph_name,omitempty"`
}

func (x *UqlRequest) Reset() {
	*x = UqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UqlRequest) ProtoMessage() {}

func (x *UqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UqlRequest.ProtoReflect.Descriptor instead.
func (*UqlRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{2}
}

func (x *UqlRequest) GetUql() string {
	if x != nil {
		return x.Uql
	}
	return ""
}

func (x *UqlRequest) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *UqlRequest) GetGraphName() string {
	if x != nil {
		return x.GraphName
	}
	return ""
}

type UqlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *Status      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TotalTimeCost  int32        `protobuf:"varint,3,opt,name=total_time_cost,json=totalTimeCost,proto3" json:"total_time_cost,omitempty"`
	EngineTimeCost int32        `protobuf:"varint,4,opt,name=engine_time_cost,json=engineTimeCost,proto3" json:"engine_time_cost,omitempty"`
	Paths          []*Path      `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
	Nodes          []*NodeAlias `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges          []*EdgeAlias `protobuf:"bytes,7,rep,name=edges,proto3" json:"edges,omitempty"`
	Attrs          []*AttrAlias `protobuf:"bytes,8,rep,name=attrs,proto3" json:"attrs,omitempty"`
	Tables         []*Table     `protobuf:"bytes,9,rep,name=tables,proto3" json:"tables,omitempty"`
	KeyValues      []*Value     `protobuf:"bytes,10,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
}

func (x *UqlReply) Reset() {
	*x = UqlReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UqlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UqlReply) ProtoMessage() {}

func (x *UqlReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UqlReply.ProtoReflect.Descriptor instead.
func (*UqlReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{3}
}

func (x *UqlReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UqlReply) GetTotalTimeCost() int32 {
	if x != nil {
		return x.TotalTimeCost
	}
	return 0
}

func (x *UqlReply) GetEngineTimeCost() int32 {
	if x != nil {
		return x.EngineTimeCost
	}
	return 0
}

func (x *UqlReply) GetPaths() []*Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *UqlReply) GetNodes() []*NodeAlias {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *UqlReply) GetEdges() []*EdgeAlias {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *UqlReply) GetAttrs() []*AttrAlias {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *UqlReply) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *UqlReply) GetKeyValues() []*Value {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

type EdgeAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeTable *EdgeTable `protobuf:"bytes,1,opt,name=edge_table,json=edgeTable,proto3" json:"edge_table,omitempty"`
	Alias     string     `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *EdgeAlias) Reset() {
	*x = EdgeAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeAlias) ProtoMessage() {}

func (x *EdgeAlias) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeAlias.ProtoReflect.Descriptor instead.
func (*EdgeAlias) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{4}
}

func (x *EdgeAlias) GetEdgeTable() *EdgeTable {
	if x != nil {
		return x.EdgeTable
	}
	return nil
}

func (x *EdgeAlias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type NodeAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeTable *NodeTable `protobuf:"bytes,1,opt,name=node_table,json=nodeTable,proto3" json:"node_table,omitempty"`
	Alias     string     `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *NodeAlias) Reset() {
	*x = NodeAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAlias) ProtoMessage() {}

func (x *NodeAlias) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAlias.ProtoReflect.Descriptor instead.
func (*NodeAlias) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{5}
}

func (x *NodeAlias) GetNodeTable() *NodeTable {
	if x != nil {
		return x.NodeTable
	}
	return nil
}

func (x *NodeAlias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

//key = alias.name, value = ly
type AttrAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias        string             `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	PropertyType UltipaPropertyType `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3,enum=ultipa.UltipaPropertyType" json:"property_type,omitempty"`
	Values       [][]byte           `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AttrAlias) Reset() {
	*x = AttrAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrAlias) ProtoMessage() {}

func (x *AttrAlias) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrAlias.ProtoReflect.Descriptor instead.
func (*AttrAlias) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{6}
}

func (x *AttrAlias) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AttrAlias) GetPropertyType() UltipaPropertyType {
	if x != nil {
		return x.PropertyType
	}
	return UltipaPropertyType_PROPERTY_INT32
}

func (x *AttrAlias) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

//------------------------3.UserSetting------------------------------
type UserSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string                    `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Opt      UserSettingRequest_OPTION `protobuf:"varint,2,opt,name=opt,proto3,enum=ultipa.UserSettingRequest_OPTION" json:"opt,omitempty"`
	//key
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	//value
	Data string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserSettingRequest) Reset() {
	*x = UserSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettingRequest) ProtoMessage() {}

func (x *UserSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettingRequest.ProtoReflect.Descriptor instead.
func (*UserSettingRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{7}
}

func (x *UserSettingRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserSettingRequest) GetOpt() UserSettingRequest_OPTION {
	if x != nil {
		return x.Opt
	}
	return UserSettingRequest_OPT_GET
}

func (x *UserSettingRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserSettingRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UserSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   string  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserSettingReply) Reset() {
	*x = UserSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettingReply) ProtoMessage() {}

func (x *UserSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettingReply.ProtoReflect.Descriptor instead.
func (*UserSettingReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{8}
}

func (x *UserSettingReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UserSettingReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//下载算法生成文件
type DownloadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePathName string `protobuf:"bytes,1,opt,name=file_path_name,json=filePathName,proto3" json:"file_path_name,omitempty"`
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadFileRequest) GetFilePathName() string {
	if x != nil {
		return x.FilePathName
	}
	return ""
}

type DownloadFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TotalSize int32   `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Chunk     []byte  `protobuf:"bytes,3,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *DownloadFileReply) Reset() {
	*x = DownloadFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReply) ProtoMessage() {}

func (x *DownloadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReply.ProtoReflect.Descriptor instead.
func (*DownloadFileReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadFileReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DownloadFileReply) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *DownloadFileReply) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

//导出数据
//limit <= 0 全量导出
type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbType           DBType   `protobuf:"varint,1,opt,name=db_type,json=dbType,proto3,enum=ultipa.DBType" json:"db_type,omitempty"`
	Limit            int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	SelectProperties []string `protobuf:"bytes,3,rep,name=select_properties,json=selectProperties,proto3" json:"select_properties,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{11}
}

func (x *ExportRequest) GetDbType() DBType {
	if x != nil {
		return x.DbType
	}
	return DBType_DBNODE
}

func (x *ExportRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ExportRequest) GetSelectProperties() []string {
	if x != nil {
		return x.SelectProperties
	}
	return nil
}

type ExportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	NodeTable *NodeTable `protobuf:"bytes,2,opt,name=node_table,json=nodeTable,proto3" json:"node_table,omitempty"`
	EdgeTable *EdgeTable `protobuf:"bytes,3,opt,name=edge_table,json=edgeTable,proto3" json:"edge_table,omitempty"`
}

func (x *ExportReply) Reset() {
	*x = ExportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportReply) ProtoMessage() {}

func (x *ExportReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportReply.ProtoReflect.Descriptor instead.
func (*ExportReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{12}
}

func (x *ExportReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExportReply) GetNodeTable() *NodeTable {
	if x != nil {
		return x.NodeTable
	}
	return nil
}

func (x *ExportReply) GetEdgeTable() *EdgeTable {
	if x != nil {
		return x.EdgeTable
	}
	return nil
}

//------------------------6.GetLeader------------------------------
type GetLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{13}
}

type GetLeaderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetLeaderReply) Reset() {
	*x = GetLeaderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderReply) ProtoMessage() {}

func (x *GetLeaderReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderReply.ProtoReflect.Descriptor instead.
func (*GetLeaderReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{14}
}

func (x *GetLeaderReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

//------------------------7.InsertNodes------------------------------
type InsertNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeTable *NodeTable `protobuf:"bytes,1,opt,name=node_table,json=nodeTable,proto3" json:"node_table,omitempty"`
	//if true return ids
	Silent    bool   `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	NoInnerId bool   `protobuf:"varint,3,opt,name=no_inner_id,json=noInnerId,proto3" json:"no_inner_id,omitempty"`
	GraphName string `protobuf:"bytes,4,opt,name=graph_name,json=graphName,proto3" json:"graph_name,omitempty"`
}

func (x *InsertNodesRequest) Reset() {
	*x = InsertNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertNodesRequest) ProtoMessage() {}

func (x *InsertNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertNodesRequest.ProtoReflect.Descriptor instead.
func (*InsertNodesRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{15}
}

func (x *InsertNodesRequest) GetNodeTable() *NodeTable {
	if x != nil {
		return x.NodeTable
	}
	return nil
}

func (x *InsertNodesRequest) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *InsertNodesRequest) GetNoInnerId() bool {
	if x != nil {
		return x.NoInnerId
	}
	return false
}

func (x *InsertNodesRequest) GetGraphName() string {
	if x != nil {
		return x.GraphName
	}
	return ""
}

type InsertNodesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeCost       int32   `protobuf:"varint,2,opt,name=time_cost,json=timeCost,proto3" json:"time_cost,omitempty"`
	EngineTimeCost int32   `protobuf:"varint,3,opt,name=engine_time_cost,json=engineTimeCost,proto3" json:"engine_time_cost,omitempty"`
	Ids            []int64 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	IgnoreIndexes  []int32 `protobuf:"varint,5,rep,packed,name=ignore_indexes,json=ignoreIndexes,proto3" json:"ignore_indexes,omitempty"`
}

func (x *InsertNodesReply) Reset() {
	*x = InsertNodesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertNodesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertNodesReply) ProtoMessage() {}

func (x *InsertNodesReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertNodesReply.ProtoReflect.Descriptor instead.
func (*InsertNodesReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{16}
}

func (x *InsertNodesReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InsertNodesReply) GetTimeCost() int32 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *InsertNodesReply) GetEngineTimeCost() int32 {
	if x != nil {
		return x.EngineTimeCost
	}
	return 0
}

func (x *InsertNodesReply) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *InsertNodesReply) GetIgnoreIndexes() []int32 {
	if x != nil {
		return x.IgnoreIndexes
	}
	return nil
}

//------------------------8.InsertEdges------------------------------
type InsertEdgesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeTable *EdgeTable `protobuf:"bytes,1,opt,name=edge_table,json=edgeTable,proto3" json:"edge_table,omitempty"`
	//if true return ids
	Silent    bool   `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	NoInnerId bool   `protobuf:"varint,3,opt,name=no_inner_id,json=noInnerId,proto3" json:"no_inner_id,omitempty"`
	GraphName string `protobuf:"bytes,4,opt,name=graph_name,json=graphName,proto3" json:"graph_name,omitempty"`
}

func (x *InsertEdgesRequest) Reset() {
	*x = InsertEdgesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertEdgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertEdgesRequest) ProtoMessage() {}

func (x *InsertEdgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertEdgesRequest.ProtoReflect.Descriptor instead.
func (*InsertEdgesRequest) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{17}
}

func (x *InsertEdgesRequest) GetEdgeTable() *EdgeTable {
	if x != nil {
		return x.EdgeTable
	}
	return nil
}

func (x *InsertEdgesRequest) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *InsertEdgesRequest) GetNoInnerId() bool {
	if x != nil {
		return x.NoInnerId
	}
	return false
}

func (x *InsertEdgesRequest) GetGraphName() string {
	if x != nil {
		return x.GraphName
	}
	return ""
}

type InsertEdgesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status         *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeCost       int32   `protobuf:"varint,2,opt,name=time_cost,json=timeCost,proto3" json:"time_cost,omitempty"`
	EngineTimeCost int32   `protobuf:"varint,3,opt,name=engine_time_cost,json=engineTimeCost,proto3" json:"engine_time_cost,omitempty"`
	Ids            []int64 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	IgnoreIndexes  []int32 `protobuf:"varint,5,rep,packed,name=ignore_indexes,json=ignoreIndexes,proto3" json:"ignore_indexes,omitempty"`
}

func (x *InsertEdgesReply) Reset() {
	*x = InsertEdgesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertEdgesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertEdgesReply) ProtoMessage() {}

func (x *InsertEdgesReply) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertEdgesReply.ProtoReflect.Descriptor instead.
func (*InsertEdgesReply) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{18}
}

func (x *InsertEdgesReply) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InsertEdgesReply) GetTimeCost() int32 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *InsertEdgesReply) GetEngineTimeCost() int32 {
	if x != nil {
		return x.EngineTimeCost
	}
	return 0
}

func (x *InsertEdgesReply) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *InsertEdgesReply) GetIgnoreIndexes() []int32 {
	if x != nil {
		return x.IgnoreIndexes
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode   ErrorCode    `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=ultipa.ErrorCode" json:"error_code,omitempty"`
	Msg         string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ClusterInfo *ClusterInfo `protobuf:"bytes,3,opt,name=cluster_info,json=clusterInfo,proto3" json:"cluster_info,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{19}
}

func (x *Status) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_SUCCESS
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Status) GetClusterInfo() *ClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

type RaftFollower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Role    int32        `protobuf:"varint,2,opt,name=role,proto3" json:"role,omitempty"`
	Status  ServerStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ultipa.ServerStatus" json:"status,omitempty"`
}

func (x *RaftFollower) Reset() {
	*x = RaftFollower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftFollower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftFollower) ProtoMessage() {}

func (x *RaftFollower) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftFollower.ProtoReflect.Descriptor instead.
func (*RaftFollower) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{20}
}

func (x *RaftFollower) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RaftFollower) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *RaftFollower) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_DEAD
}

type ClusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redirect      string          `protobuf:"bytes,1,opt,name=redirect,proto3" json:"redirect,omitempty"`
	LeaderAddress string          `protobuf:"bytes,2,opt,name=leader_address,json=leaderAddress,proto3" json:"leader_address,omitempty"`
	Followers     []*RaftFollower `protobuf:"bytes,3,rep,name=followers,proto3" json:"followers,omitempty"`
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{21}
}

func (x *ClusterInfo) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ClusterInfo) GetLeaderAddress() string {
	if x != nil {
		return x.LeaderAddress
	}
	return ""
}

func (x *ClusterInfo) GetFollowers() []*RaftFollower {
	if x != nil {
		return x.Followers
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeTable *NodeTable `protobuf:"bytes,1,opt,name=node_table,json=nodeTable,proto3" json:"node_table,omitempty"`
	EdgeTable *EdgeTable `protobuf:"bytes,2,opt,name=edge_table,json=edgeTable,proto3" json:"edge_table,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{22}
}

func (x *Path) GetNodeTable() *NodeTable {
	if x != nil {
		return x.NodeTable
	}
	return nil
}

func (x *Path) GetEdgeTable() *EdgeTable {
	if x != nil {
		return x.EdgeTable
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string      `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Headers   []string    `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	TableRows []*TableRow `protobuf:"bytes,3,rep,name=table_rows,json=tableRows,proto3" json:"table_rows,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{23}
}

func (x *Table) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Table) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Table) GetTableRows() []*TableRow {
	if x != nil {
		return x.TableRows
	}
	return nil
}

type TableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TableRow) Reset() {
	*x = TableRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRow) ProtoMessage() {}

func (x *TableRow) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRow.ProtoReflect.Descriptor instead.
func (*TableRow) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{24}
}

func (x *TableRow) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type NodeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers  []*Header  `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	NodeRows []*NodeRow `protobuf:"bytes,3,rep,name=node_rows,json=nodeRows,proto3" json:"node_rows,omitempty"`
}

func (x *NodeTable) Reset() {
	*x = NodeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeTable) ProtoMessage() {}

func (x *NodeTable) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeTable.ProtoReflect.Descriptor instead.
func (*NodeTable) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{25}
}

func (x *NodeTable) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *NodeTable) GetNodeRows() []*NodeRow {
	if x != nil {
		return x.NodeRows
	}
	return nil
}

type EdgeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers  []*Header  `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	EdgeRows []*EdgeRow `protobuf:"bytes,3,rep,name=edge_rows,json=edgeRows,proto3" json:"edge_rows,omitempty"`
}

func (x *EdgeTable) Reset() {
	*x = EdgeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeTable) ProtoMessage() {}

func (x *EdgeTable) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeTable.ProtoReflect.Descriptor instead.
func (*EdgeTable) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{26}
}

func (x *EdgeTable) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *EdgeTable) GetEdgeRows() []*EdgeRow {
	if x != nil {
		return x.EdgeRows
	}
	return nil
}

type NodeRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Values [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *NodeRow) Reset() {
	*x = NodeRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRow) ProtoMessage() {}

func (x *NodeRow) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRow.ProtoReflect.Descriptor instead.
func (*NodeRow) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{27}
}

func (x *NodeRow) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NodeRow) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type EdgeRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromId int64    `protobuf:"varint,2,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId   int64    `protobuf:"varint,3,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	Values [][]byte `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *EdgeRow) Reset() {
	*x = EdgeRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeRow) ProtoMessage() {}

func (x *EdgeRow) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeRow.ProtoReflect.Descriptor instead.
func (*EdgeRow) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{28}
}

func (x *EdgeRow) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EdgeRow) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *EdgeRow) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *EdgeRow) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyName string             `protobuf:"bytes,1,opt,name=property_name,json=propertyName,proto3" json:"property_name,omitempty"`
	PropertyType UltipaPropertyType `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3,enum=ultipa.UltipaPropertyType" json:"property_type,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{29}
}

func (x *Header) GetPropertyName() string {
	if x != nil {
		return x.PropertyName
	}
	return ""
}

func (x *Header) GetPropertyType() UltipaPropertyType {
	if x != nil {
		return x.PropertyType
	}
	return UltipaPropertyType_PROPERTY_INT32
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ultipa_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_ultipa_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_ultipa_proto_rawDescGZIP(), []int{30}
}

func (x *Value) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_ultipa_proto protoreflect.FileDescriptor

var file_ultipa_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x22, 0x28, 0x0a, 0x12, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x55,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x54, 0x0a, 0x10, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x0a, 0x55, 0x71, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x71, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xf8, 0x02, 0x0a, 0x08, 0x55, 0x71, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x09, 0x45, 0x64,
	0x67, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09,
	0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0x53, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x22, 0x7a, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xb2, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x22, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0b, 0x0a, 0x07, 0x4f,
	0x50, 0x54, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x5f,
	0x53, 0x45, 0x54, 0x10, 0x01, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x70, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x7b, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e,
	0x44, 0x42, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x65,
	0x64, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x09, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x12,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x6e, 0x6f, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6e, 0x6f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x10,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x6e, 0x6f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6a, 0x0a, 0x0c,
	0x52, 0x61, 0x66, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x22,
	0x6a, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x09, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x71, 0x0a, 0x05, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x22,
	0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x28, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x45, 0x64, 0x67, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2c,
	0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x6f, 0x77, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x31, 0x0a, 0x07,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x5f, 0x0a, 0x07, 0x45, 0x64, 0x67, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x6e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e,
	0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x2f, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2a, 0xb7, 0x01, 0x0a, 0x12, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52,
	0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x36,
	0x34, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f,
	0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x59, 0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x07, 0x2a, 0xb2, 0x02, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x44, 0x42, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x41,
	0x46, 0x54, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x06, 0x12, 0x1f, 0x0a,
	0x1b, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x59, 0x45, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x51, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x4e, 0x4f, 0x5f,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x53, 0x10, 0x0b, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x4e, 0x4f,
	0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x53, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x0d,
	0x2a, 0x4b, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x47, 0x4f,
	0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x23, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x2a, 0x20, 0x0a, 0x06, 0x44, 0x42, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x42, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x42, 0x45, 0x44,
	0x47, 0x45, 0x10, 0x01, 0x2a, 0x77, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x05, 0x32, 0xd0, 0x04,
	0x0a, 0x0a, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x52, 0x70, 0x63, 0x73, 0x12, 0x42, 0x0a, 0x08,
	0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1a, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x55, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x03, 0x55, 0x71, 0x6c, 0x12, 0x12, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x2e, 0x55, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x2e, 0x55, 0x71, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x45, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x61, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x15,
	0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a,
	0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x05, 0x55, 0x71, 0x6c, 0x45, 0x78, 0x12, 0x12, 0x2e, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x2e,
	0x55, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x61, 0x2e, 0x55, 0x71, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ultipa_proto_rawDescOnce sync.Once
	file_ultipa_proto_rawDescData = file_ultipa_proto_rawDesc
)

func file_ultipa_proto_rawDescGZIP() []byte {
	file_ultipa_proto_rawDescOnce.Do(func() {
		file_ultipa_proto_rawDescData = protoimpl.X.CompressGZIP(file_ultipa_proto_rawDescData)
	})
	return file_ultipa_proto_rawDescData
}

var file_ultipa_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_ultipa_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_ultipa_proto_goTypes = []interface{}{
	(UltipaPropertyType)(0),        // 0: ultipa.UltipaPropertyType
	(ErrorCode)(0),                 // 1: ultipa.ErrorCode
	(FollowerRole)(0),              // 2: ultipa.FollowerRole
	(ServerStatus)(0),              // 3: ultipa.ServerStatus
	(DBType)(0),                    // 4: ultipa.DBType
	(TASK_STATUS)(0),               // 5: ultipa.TASK_STATUS
	(UserSettingRequest_OPTION)(0), // 6: ultipa.UserSettingRequest.OPTION
	(*HelloUltipaRequest)(nil),     // 7: ultipa.HelloUltipaRequest
	(*HelloUltipaReply)(nil),       // 8: ultipa.HelloUltipaReply
	(*UqlRequest)(nil),             // 9: ultipa.UqlRequest
	(*UqlReply)(nil),               // 10: ultipa.UqlReply
	(*EdgeAlias)(nil),              // 11: ultipa.EdgeAlias
	(*NodeAlias)(nil),              // 12: ultipa.NodeAlias
	(*AttrAlias)(nil),              // 13: ultipa.AttrAlias
	(*UserSettingRequest)(nil),     // 14: ultipa.UserSettingRequest
	(*UserSettingReply)(nil),       // 15: ultipa.UserSettingReply
	(*DownloadFileRequest)(nil),    // 16: ultipa.DownloadFileRequest
	(*DownloadFileReply)(nil),      // 17: ultipa.DownloadFileReply
	(*ExportRequest)(nil),          // 18: ultipa.ExportRequest
	(*ExportReply)(nil),            // 19: ultipa.ExportReply
	(*GetLeaderRequest)(nil),       // 20: ultipa.GetLeaderRequest
	(*GetLeaderReply)(nil),         // 21: ultipa.GetLeaderReply
	(*InsertNodesRequest)(nil),     // 22: ultipa.InsertNodesRequest
	(*InsertNodesReply)(nil),       // 23: ultipa.InsertNodesReply
	(*InsertEdgesRequest)(nil),     // 24: ultipa.InsertEdgesRequest
	(*InsertEdgesReply)(nil),       // 25: ultipa.InsertEdgesReply
	(*Status)(nil),                 // 26: ultipa.Status
	(*RaftFollower)(nil),           // 27: ultipa.RaftFollower
	(*ClusterInfo)(nil),            // 28: ultipa.ClusterInfo
	(*Path)(nil),                   // 29: ultipa.Path
	(*Table)(nil),                  // 30: ultipa.Table
	(*TableRow)(nil),               // 31: ultipa.TableRow
	(*NodeTable)(nil),              // 32: ultipa.NodeTable
	(*EdgeTable)(nil),              // 33: ultipa.EdgeTable
	(*NodeRow)(nil),                // 34: ultipa.NodeRow
	(*EdgeRow)(nil),                // 35: ultipa.EdgeRow
	(*Header)(nil),                 // 36: ultipa.Header
	(*Value)(nil),                  // 37: ultipa.Value
}
var file_ultipa_proto_depIdxs = []int32{
	26, // 0: ultipa.HelloUltipaReply.status:type_name -> ultipa.Status
	26, // 1: ultipa.UqlReply.status:type_name -> ultipa.Status
	29, // 2: ultipa.UqlReply.paths:type_name -> ultipa.Path
	12, // 3: ultipa.UqlReply.nodes:type_name -> ultipa.NodeAlias
	11, // 4: ultipa.UqlReply.edges:type_name -> ultipa.EdgeAlias
	13, // 5: ultipa.UqlReply.attrs:type_name -> ultipa.AttrAlias
	30, // 6: ultipa.UqlReply.tables:type_name -> ultipa.Table
	37, // 7: ultipa.UqlReply.key_values:type_name -> ultipa.Value
	33, // 8: ultipa.EdgeAlias.edge_table:type_name -> ultipa.EdgeTable
	32, // 9: ultipa.NodeAlias.node_table:type_name -> ultipa.NodeTable
	0,  // 10: ultipa.AttrAlias.property_type:type_name -> ultipa.UltipaPropertyType
	6,  // 11: ultipa.UserSettingRequest.opt:type_name -> ultipa.UserSettingRequest.OPTION
	26, // 12: ultipa.UserSettingReply.status:type_name -> ultipa.Status
	26, // 13: ultipa.DownloadFileReply.status:type_name -> ultipa.Status
	4,  // 14: ultipa.ExportRequest.db_type:type_name -> ultipa.DBType
	26, // 15: ultipa.ExportReply.status:type_name -> ultipa.Status
	32, // 16: ultipa.ExportReply.node_table:type_name -> ultipa.NodeTable
	33, // 17: ultipa.ExportReply.edge_table:type_name -> ultipa.EdgeTable
	26, // 18: ultipa.GetLeaderReply.status:type_name -> ultipa.Status
	32, // 19: ultipa.InsertNodesRequest.node_table:type_name -> ultipa.NodeTable
	26, // 20: ultipa.InsertNodesReply.status:type_name -> ultipa.Status
	33, // 21: ultipa.InsertEdgesRequest.edge_table:type_name -> ultipa.EdgeTable
	26, // 22: ultipa.InsertEdgesReply.status:type_name -> ultipa.Status
	1,  // 23: ultipa.Status.error_code:type_name -> ultipa.ErrorCode
	28, // 24: ultipa.Status.cluster_info:type_name -> ultipa.ClusterInfo
	3,  // 25: ultipa.RaftFollower.status:type_name -> ultipa.ServerStatus
	27, // 26: ultipa.ClusterInfo.followers:type_name -> ultipa.RaftFollower
	32, // 27: ultipa.Path.node_table:type_name -> ultipa.NodeTable
	33, // 28: ultipa.Path.edge_table:type_name -> ultipa.EdgeTable
	31, // 29: ultipa.Table.table_rows:type_name -> ultipa.TableRow
	36, // 30: ultipa.NodeTable.headers:type_name -> ultipa.Header
	34, // 31: ultipa.NodeTable.node_rows:type_name -> ultipa.NodeRow
	36, // 32: ultipa.EdgeTable.headers:type_name -> ultipa.Header
	35, // 33: ultipa.EdgeTable.edge_rows:type_name -> ultipa.EdgeRow
	0,  // 34: ultipa.Header.property_type:type_name -> ultipa.UltipaPropertyType
	7,  // 35: ultipa.UltipaRpcs.SayHello:input_type -> ultipa.HelloUltipaRequest
	9,  // 36: ultipa.UltipaRpcs.Uql:input_type -> ultipa.UqlRequest
	14, // 37: ultipa.UltipaRpcs.UserSetting:input_type -> ultipa.UserSettingRequest
	16, // 38: ultipa.UltipaRpcs.DownloadFile:input_type -> ultipa.DownloadFileRequest
	18, // 39: ultipa.UltipaRpcs.Export:input_type -> ultipa.ExportRequest
	20, // 40: ultipa.UltipaRpcs.GetLeader:input_type -> ultipa.GetLeaderRequest
	22, // 41: ultipa.UltipaRpcs.InsertNodes:input_type -> ultipa.InsertNodesRequest
	24, // 42: ultipa.UltipaRpcs.InsertEdges:input_type -> ultipa.InsertEdgesRequest
	9,  // 43: ultipa.UltipaRpcs.UqlEx:input_type -> ultipa.UqlRequest
	8,  // 44: ultipa.UltipaRpcs.SayHello:output_type -> ultipa.HelloUltipaReply
	10, // 45: ultipa.UltipaRpcs.Uql:output_type -> ultipa.UqlReply
	15, // 46: ultipa.UltipaRpcs.UserSetting:output_type -> ultipa.UserSettingReply
	17, // 47: ultipa.UltipaRpcs.DownloadFile:output_type -> ultipa.DownloadFileReply
	19, // 48: ultipa.UltipaRpcs.Export:output_type -> ultipa.ExportReply
	21, // 49: ultipa.UltipaRpcs.GetLeader:output_type -> ultipa.GetLeaderReply
	23, // 50: ultipa.UltipaRpcs.InsertNodes:output_type -> ultipa.InsertNodesReply
	25, // 51: ultipa.UltipaRpcs.InsertEdges:output_type -> ultipa.InsertEdgesReply
	10, // 52: ultipa.UltipaRpcs.UqlEx:output_type -> ultipa.UqlReply
	44, // [44:53] is the sub-list for method output_type
	35, // [35:44] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_ultipa_proto_init() }
func file_ultipa_proto_init() {
	if File_ultipa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ultipa_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloUltipaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloUltipaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UqlReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertNodesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertEdgesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertEdgesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftFollower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ultipa_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ultipa_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ultipa_proto_goTypes,
		DependencyIndexes: file_ultipa_proto_depIdxs,
		EnumInfos:         file_ultipa_proto_enumTypes,
		MessageInfos:      file_ultipa_proto_msgTypes,
	}.Build()
	File_ultipa_proto = out.File
	file_ultipa_proto_rawDesc = nil
	file_ultipa_proto_goTypes = nil
	file_ultipa_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UltipaRpcsClient is the client API for UltipaRpcs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UltipaRpcsClient interface {
	// 1.Sends a greeting
	SayHello(ctx context.Context, in *HelloUltipaRequest, opts ...grpc.CallOption) (*HelloUltipaReply, error)
	//2.uql
	Uql(ctx context.Context, in *UqlRequest, opts ...grpc.CallOption) (UltipaRpcs_UqlClient, error)
	//3.用户设置(用于存储用户配置信息,用户自主控制)
	UserSetting(ctx context.Context, in *UserSettingRequest, opts ...grpc.CallOption) (*UserSettingReply, error)
	//4.下载算法生成文件
	DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (UltipaRpcs_DownloadFileClient, error)
	//5.导出点,边数据
	Export(ctx context.Context, in *ExportRequest, opts ...grpc.CallOption) (UltipaRpcs_ExportClient, error)
	//6. 获取raft的leader
	GetLeader(ctx context.Context, in *GetLeaderRequest, opts ...grpc.CallOption) (*GetLeaderReply, error)
	//7.插入点
	InsertNodes(ctx context.Context, in *InsertNodesRequest, opts ...grpc.CallOption) (*InsertNodesReply, error)
	//8.插入边
	InsertEdges(ctx context.Context, in *InsertEdgesRequest, opts ...grpc.CallOption) (*InsertEdgesReply, error)
	//9.uql扩展，以下命令在此接口执行执行 top, kill showTask, stopTask,clearTask show() stat listGraph
	// listAlgo getGraph createPolicy, deletePolicy, listPolicy, getPolicy,
	// grant, revoke, listPrivilege, getUser, getSelfInfo, createUser, updateUser, deleteUser, showIndex
	UqlEx(ctx context.Context, in *UqlRequest, opts ...grpc.CallOption) (UltipaRpcs_UqlExClient, error)
}

type ultipaRpcsClient struct {
	cc grpc.ClientConnInterface
}

func NewUltipaRpcsClient(cc grpc.ClientConnInterface) UltipaRpcsClient {
	return &ultipaRpcsClient{cc}
}

func (c *ultipaRpcsClient) SayHello(ctx context.Context, in *HelloUltipaRequest, opts ...grpc.CallOption) (*HelloUltipaReply, error) {
	out := new(HelloUltipaReply)
	err := c.cc.Invoke(ctx, "/ultipa.UltipaRpcs/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ultipaRpcsClient) Uql(ctx context.Context, in *UqlRequest, opts ...grpc.CallOption) (UltipaRpcs_UqlClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UltipaRpcs_serviceDesc.Streams[0], "/ultipa.UltipaRpcs/Uql", opts...)
	if err != nil {
		return nil, err
	}
	x := &ultipaRpcsUqlClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UltipaRpcs_UqlClient interface {
	Recv() (*UqlReply, error)
	grpc.ClientStream
}

type ultipaRpcsUqlClient struct {
	grpc.ClientStream
}

func (x *ultipaRpcsUqlClient) Recv() (*UqlReply, error) {
	m := new(UqlReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ultipaRpcsClient) UserSetting(ctx context.Context, in *UserSettingRequest, opts ...grpc.CallOption) (*UserSettingReply, error) {
	out := new(UserSettingReply)
	err := c.cc.Invoke(ctx, "/ultipa.UltipaRpcs/UserSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ultipaRpcsClient) DownloadFile(ctx context.Context, in *DownloadFileRequest, opts ...grpc.CallOption) (UltipaRpcs_DownloadFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UltipaRpcs_serviceDesc.Streams[1], "/ultipa.UltipaRpcs/DownloadFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &ultipaRpcsDownloadFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UltipaRpcs_DownloadFileClient interface {
	Recv() (*DownloadFileReply, error)
	grpc.ClientStream
}

type ultipaRpcsDownloadFileClient struct {
	grpc.ClientStream
}

func (x *ultipaRpcsDownloadFileClient) Recv() (*DownloadFileReply, error) {
	m := new(DownloadFileReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ultipaRpcsClient) Export(ctx context.Context, in *ExportRequest, opts ...grpc.CallOption) (UltipaRpcs_ExportClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UltipaRpcs_serviceDesc.Streams[2], "/ultipa.UltipaRpcs/Export", opts...)
	if err != nil {
		return nil, err
	}
	x := &ultipaRpcsExportClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UltipaRpcs_ExportClient interface {
	Recv() (*ExportReply, error)
	grpc.ClientStream
}

type ultipaRpcsExportClient struct {
	grpc.ClientStream
}

func (x *ultipaRpcsExportClient) Recv() (*ExportReply, error) {
	m := new(ExportReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *ultipaRpcsClient) GetLeader(ctx context.Context, in *GetLeaderRequest, opts ...grpc.CallOption) (*GetLeaderReply, error) {
	out := new(GetLeaderReply)
	err := c.cc.Invoke(ctx, "/ultipa.UltipaRpcs/GetLeader", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ultipaRpcsClient) InsertNodes(ctx context.Context, in *InsertNodesRequest, opts ...grpc.CallOption) (*InsertNodesReply, error) {
	out := new(InsertNodesReply)
	err := c.cc.Invoke(ctx, "/ultipa.UltipaRpcs/InsertNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ultipaRpcsClient) InsertEdges(ctx context.Context, in *InsertEdgesRequest, opts ...grpc.CallOption) (*InsertEdgesReply, error) {
	out := new(InsertEdgesReply)
	err := c.cc.Invoke(ctx, "/ultipa.UltipaRpcs/InsertEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ultipaRpcsClient) UqlEx(ctx context.Context, in *UqlRequest, opts ...grpc.CallOption) (UltipaRpcs_UqlExClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UltipaRpcs_serviceDesc.Streams[3], "/ultipa.UltipaRpcs/UqlEx", opts...)
	if err != nil {
		return nil, err
	}
	x := &ultipaRpcsUqlExClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UltipaRpcs_UqlExClient interface {
	Recv() (*UqlReply, error)
	grpc.ClientStream
}

type ultipaRpcsUqlExClient struct {
	grpc.ClientStream
}

func (x *ultipaRpcsUqlExClient) Recv() (*UqlReply, error) {
	m := new(UqlReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UltipaRpcsServer is the server API for UltipaRpcs service.
type UltipaRpcsServer interface {
	// 1.Sends a greeting
	SayHello(context.Context, *HelloUltipaRequest) (*HelloUltipaReply, error)
	//2.uql
	Uql(*UqlRequest, UltipaRpcs_UqlServer) error
	//3.用户设置(用于存储用户配置信息,用户自主控制)
	UserSetting(context.Context, *UserSettingRequest) (*UserSettingReply, error)
	//4.下载算法生成文件
	DownloadFile(*DownloadFileRequest, UltipaRpcs_DownloadFileServer) error
	//5.导出点,边数据
	Export(*ExportRequest, UltipaRpcs_ExportServer) error
	//6. 获取raft的leader
	GetLeader(context.Context, *GetLeaderRequest) (*GetLeaderReply, error)
	//7.插入点
	InsertNodes(context.Context, *InsertNodesRequest) (*InsertNodesReply, error)
	//8.插入边
	InsertEdges(context.Context, *InsertEdgesRequest) (*InsertEdgesReply, error)
	//9.uql扩展，以下命令在此接口执行执行 top, kill showTask, stopTask,clearTask show() stat listGraph
	// listAlgo getGraph createPolicy, deletePolicy, listPolicy, getPolicy,
	// grant, revoke, listPrivilege, getUser, getSelfInfo, createUser, updateUser, deleteUser, showIndex
	UqlEx(*UqlRequest, UltipaRpcs_UqlExServer) error
}

// UnimplementedUltipaRpcsServer can be embedded to have forward compatible implementations.
type UnimplementedUltipaRpcsServer struct {
}

func (*UnimplementedUltipaRpcsServer) SayHello(context.Context, *HelloUltipaRequest) (*HelloUltipaReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedUltipaRpcsServer) Uql(*UqlRequest, UltipaRpcs_UqlServer) error {
	return status.Errorf(codes.Unimplemented, "method Uql not implemented")
}
func (*UnimplementedUltipaRpcsServer) UserSetting(context.Context, *UserSettingRequest) (*UserSettingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSetting not implemented")
}
func (*UnimplementedUltipaRpcsServer) DownloadFile(*DownloadFileRequest, UltipaRpcs_DownloadFileServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedUltipaRpcsServer) Export(*ExportRequest, UltipaRpcs_ExportServer) error {
	return status.Errorf(codes.Unimplemented, "method Export not implemented")
}
func (*UnimplementedUltipaRpcsServer) GetLeader(context.Context, *GetLeaderRequest) (*GetLeaderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLeader not implemented")
}
func (*UnimplementedUltipaRpcsServer) InsertNodes(context.Context, *InsertNodesRequest) (*InsertNodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertNodes not implemented")
}
func (*UnimplementedUltipaRpcsServer) InsertEdges(context.Context, *InsertEdgesRequest) (*InsertEdgesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertEdges not implemented")
}
func (*UnimplementedUltipaRpcsServer) UqlEx(*UqlRequest, UltipaRpcs_UqlExServer) error {
	return status.Errorf(codes.Unimplemented, "method UqlEx not implemented")
}

func RegisterUltipaRpcsServer(s *grpc.Server, srv UltipaRpcsServer) {
	s.RegisterService(&_UltipaRpcs_serviceDesc, srv)
}

func _UltipaRpcs_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloUltipaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UltipaRpcsServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ultipa.UltipaRpcs/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UltipaRpcsServer).SayHello(ctx, req.(*HelloUltipaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UltipaRpcs_Uql_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UqlRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UltipaRpcsServer).Uql(m, &ultipaRpcsUqlServer{stream})
}

type UltipaRpcs_UqlServer interface {
	Send(*UqlReply) error
	grpc.ServerStream
}

type ultipaRpcsUqlServer struct {
	grpc.ServerStream
}

func (x *ultipaRpcsUqlServer) Send(m *UqlReply) error {
	return x.ServerStream.SendMsg(m)
}

func _UltipaRpcs_UserSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSettingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UltipaRpcsServer).UserSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ultipa.UltipaRpcs/UserSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UltipaRpcsServer).UserSetting(ctx, req.(*UserSettingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UltipaRpcs_DownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UltipaRpcsServer).DownloadFile(m, &ultipaRpcsDownloadFileServer{stream})
}

type UltipaRpcs_DownloadFileServer interface {
	Send(*DownloadFileReply) error
	grpc.ServerStream
}

type ultipaRpcsDownloadFileServer struct {
	grpc.ServerStream
}

func (x *ultipaRpcsDownloadFileServer) Send(m *DownloadFileReply) error {
	return x.ServerStream.SendMsg(m)
}

func _UltipaRpcs_Export_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UltipaRpcsServer).Export(m, &ultipaRpcsExportServer{stream})
}

type UltipaRpcs_ExportServer interface {
	Send(*ExportReply) error
	grpc.ServerStream
}

type ultipaRpcsExportServer struct {
	grpc.ServerStream
}

func (x *ultipaRpcsExportServer) Send(m *ExportReply) error {
	return x.ServerStream.SendMsg(m)
}

func _UltipaRpcs_GetLeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLeaderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UltipaRpcsServer).GetLeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ultipa.UltipaRpcs/GetLeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UltipaRpcsServer).GetLeader(ctx, req.(*GetLeaderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UltipaRpcs_InsertNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UltipaRpcsServer).InsertNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ultipa.UltipaRpcs/InsertNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UltipaRpcsServer).InsertNodes(ctx, req.(*InsertNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UltipaRpcs_InsertEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertEdgesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UltipaRpcsServer).InsertEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ultipa.UltipaRpcs/InsertEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UltipaRpcsServer).InsertEdges(ctx, req.(*InsertEdgesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UltipaRpcs_UqlEx_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UqlRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UltipaRpcsServer).UqlEx(m, &ultipaRpcsUqlExServer{stream})
}

type UltipaRpcs_UqlExServer interface {
	Send(*UqlReply) error
	grpc.ServerStream
}

type ultipaRpcsUqlExServer struct {
	grpc.ServerStream
}

func (x *ultipaRpcsUqlExServer) Send(m *UqlReply) error {
	return x.ServerStream.SendMsg(m)
}

var _UltipaRpcs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ultipa.UltipaRpcs",
	HandlerType: (*UltipaRpcsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _UltipaRpcs_SayHello_Handler,
		},
		{
			MethodName: "UserSetting",
			Handler:    _UltipaRpcs_UserSetting_Handler,
		},
		{
			MethodName: "GetLeader",
			Handler:    _UltipaRpcs_GetLeader_Handler,
		},
		{
			MethodName: "InsertNodes",
			Handler:    _UltipaRpcs_InsertNodes_Handler,
		},
		{
			MethodName: "InsertEdges",
			Handler:    _UltipaRpcs_InsertEdges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Uql",
			Handler:       _UltipaRpcs_Uql_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DownloadFile",
			Handler:       _UltipaRpcs_DownloadFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Export",
			Handler:       _UltipaRpcs_Export_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UqlEx",
			Handler:       _UltipaRpcs_UqlEx_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ultipa.proto",
}
